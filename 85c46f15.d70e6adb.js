(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{67:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return l}));var n=r(2),a=r(6),o=(r(0),r(83)),s={title:"bind(observable)",sidebar_label:"bind()"},i={unversionedId:"api/core/bind",id:"api/core/bind",isDocsHomePage:!1,title:"bind(observable)",description:"Binds an observable to React, and returns a hook and shared stream representing the source observable.",source:"@site/docs/api/core/bind.md",slug:"/api/core/bind",permalink:"/react-rxjs.org/docs/api/core/bind",editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/api/core/bind.md",version:"current",sidebar_label:"bind()",sidebar:"someSidebar",previous:{title:"Todos",permalink:"/react-rxjs.org/docs/tutorial/todos"},next:{title:"shareLatest()",permalink:"/react-rxjs.org/docs/api/core/shareLatest"}},c=[{value:"Example",id:"example",children:[]},{value:"Factory Overload",id:"factory-overload",children:[{value:"Example",id:"example-1",children:[]}]},{value:"See also",id:"see-also",children:[]}],b={rightToc:c};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Binds an observable to React, and returns a hook and shared stream representing the source observable."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"function bind<T>(observable: Observable<T>): \n  [() => Exclude<T, typeof SUSPENSE>, Observable<T>];\n")),Object(o.b)("h4",{id:"arguments"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"observable"),": Source observable to be used by the hook.")),Object(o.b)("h4",{id:"returns"},"Returns"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"[1, 2]"),":"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"A React Hook that yields the latest emitted value of the observable. If the\nObservable doesn't synchronously emit a value upon the first subscription, then\nthe hook will leverage React Suspense while it's waiting for the first value.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"A ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"shareLatest"}),Object(o.b)("inlineCode",{parentName:"a"},"shareLatest"))," version of the observable. It can be used for composing other\nstreams that depend on it. The shared subscription is closed as soon as there\nare no subscribers to that observable."))),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"import { scan, startWith } from 'rxjs/operators'\nimport { bind } from '@react-rxjs/core'\n\nconst [useCounter, counter$] = bind(\n  clicks$.pipe(\n    scan((prev) => prev + 1, 0),\n    startWith(0)\n  )\n);\n\nfunction CounterDisplay() {\n  const counter = useCounter();\n\n  return <div>{counter}</div>;\n}\n")),Object(o.b)("h2",{id:"factory-overload"},"Factory Overload"),Object(o.b)("p",null,"Binds an observable factory function to React, and returns a hook and shared stream representing the created observables."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"function bind<A extends unknown[], O>(getObservable: (...args: A) => Observable<O>): \n  [(...args: A) => Exclude<O, typeof SUSPENSE>, (...args: A) => Observable<O>];\n")),Object(o.b)("h4",{id:"arguments-1"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"getObservable"),": Factory of observables. The arguments of this function\nwill be the ones used in the hook.")),Object(o.b)("h4",{id:"returns-1"},"Returns"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"[1, 2]"),":"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"A React hook with the same arguments as the factory function. This hook\nwill yield the latest update from the observable returned from the factory function.\nIf the Observable doesn't synchronously emit a value upon the first subscription, then\nthe hook will leverage React Suspense while it's waiting for the first value.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"A ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"shareLatest"}),Object(o.b)("inlineCode",{parentName:"a"},"shareLatest"))," version of the observable returned by the factory function. It\ncan be used for composing other streams that depend on it. The shared subscription\nis closed as soon as there are no subscribers to that observable."))),Object(o.b)("h3",{id:"example-1"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"const [useStory, getStory$] = bind((storyId: number) =>\n  getStoryWithUpdates$(storyId)\n);\n\nconst Story: React.FC<{ id: number }> = ({ id }) => {\n  const story = useStory(id);\n\n  return (\n    <article>\n      <h1>{story.title}</h1>\n      <p>{story.description}</p>\n    </article>\n  );\n};\n")),Object(o.b)("h2",{id:"see-also"},"See also"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"shareLatest"}),Object(o.b)("inlineCode",{parentName:"a"},"shareLatest()")))))}l.isMDXComponent=!0},83:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var b=a.a.createContext({}),l=function(e){var t=a.a.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||o;return r?a.a.createElement(m,i(i({ref:t},b),{},{components:r})):a.a.createElement(m,i({ref:t},b))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var b=2;b<o;b++)s[b]=r[b];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);