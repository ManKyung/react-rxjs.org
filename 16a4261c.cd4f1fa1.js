(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{141:function(t,e,o){"use strict";o.r(e),o.d(e,"frontMatter",(function(){return r})),o.d(e,"metadata",(function(){return c})),o.d(e,"rightToc",(function(){return s})),o.d(e,"default",(function(){return b}));var a=o(2),i=o(9),n=(o(0),o(172)),r={id:"motivation",title:"Motivation",sidebar_label:"Motivation"},c={id:"introduction/motivation",isDocsHomePage:!1,title:"Motivation",description:"React is not Reactive. Richard Harris does a",source:"@site/docs/introduction/motivation.md",permalink:"/react-rxjs.org/docs/introduction/motivation",editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/introduction/motivation.md",sidebar_label:"Motivation",sidebar:"someSidebar",next:{title:"Core Concepts",permalink:"/react-rxjs.org/docs/introduction/core-concepts"}},s=[],l={rightToc:s};function b(t){var e=t.components,o=Object(i.a)(t,["components"]);return Object(n.b)("wrapper",Object(a.a)({},l,o,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"React is not Reactive. ",Object(n.b)("a",Object(a.a)({parentName:"p"},{href:"https://twitter.com/Rich_Harris"}),"Richard Harris")," does a\ngreat job explaining this in his talk ",Object(n.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.youtube.com/watch?v=AdNJ3fydeao"}),"Rethinking Reactivity"),".\nIn that talk he borrows the following quote from ",Object(n.b)("a",Object(a.a)({parentName:"p"},{href:"https://apfelmus.nfshost.com/"}),"Heinrich Apfelmus"),",\nwhich brilliantly defines the essence of functional reactive programming:"),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"The essence of functional reactive programming is to specify the dynamic\nbehavior of a value completely at the time of declaration")),Object(n.b)("p",null,"Our goal is to bring the essence of reactive programming to React. We do that by\nenabling a state management system based on RxJS streams. No stores. No context.\nJust reactive streams that integrate seamlessly with React."),Object(n.b)("p",null,"Working with Reactive solutions has many advantages, among them:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"They provide loosely coupled solutions: reactive streams are only coupled to events that they directly depend on."),Object(n.b)("li",{parentName:"ul"},"Avoiding unnecessary computations, which translates into optimal react updates."),Object(n.b)("li",{parentName:"ul"},"Improving code navigability, by avoiding unnecessary layers of indirection."),Object(n.b)("li",{parentName:"ul"},"If we compare them with Flux based architectures, they generate a lot less boilerplate."),Object(n.b)("li",{parentName:"ul"},"By avoiding central stores we get code-splitting out of the box.")))}b.isMDXComponent=!0}}]);