(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{79:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return s}));var n=r(2),a=r(6),i=(r(0),r(83)),o={title:"split(keySelector)",sidebar_label:"split()"},l={unversionedId:"api/utils/split",id:"api/utils/split",isDocsHomePage:!1,title:"split(keySelector)",description:"A [pipeable operator] that groups the items emitted by the source based on the",source:"@site/docs/api/utils/split.md",slug:"/api/utils/split",permalink:"/docs/api/utils/split",editUrl:"https://github.com/re-rxjs/react-rxjs.org/tree/master/docs/api/utils/split.md",version:"current",sidebar_label:"split()",sidebar:"someSidebar",previous:{title:"selfDependant()",permalink:"/docs/api/utils/selfDependant"},next:{title:"suspend(observable)",permalink:"/docs/api/utils/suspend"}},c=[{value:"Description",id:"description",children:[]},{value:"See also",id:"see-also",children:[]}],p={rightToc:c};function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://rxjs.dev/guide/v6/pipeable-operators"}),"pipeable operator")," that groups the items emitted by the source based on the\n",Object(i.b)("inlineCode",{parentName:"p"},"keySelector")," function, emitting one Observable for each group."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"function split<T, K>(keySelector: (value: T) => K, streamSelector?: (grouped: Observable<T>, key: K) => Observable<R>): \n  OperatorFunction<T, GroupedObservable<K, T>>\n")),Object(i.b)("h4",{id:"arguments"},"Arguments"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"keySelector"),": A function that receives an item and returns the key of that item's group."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"streamSelector"),": (Optional) The function to apply to each grouped Observable. Default: identity.")),Object(i.b)("h4",{id:"returns"},"Returns"),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://rxjs.dev/api/index/interface/OperatorFunction"}),Object(i.b)("inlineCode",{parentName:"a"},"OperatorFunction<T, GroupedObservable<K, T>>")),": An Observable that emits a grouped Observable for each key\nprovided by the key selector function. The values from the source Observable emitted in each grouped Observable\nare optional transformed by the stream selector function, if specified."),Object(i.b)("h3",{id:"description"},"Description"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"split")," will subscribe to each grouped Observable and share the result to every\ninner subscriber of that group. This inner Observable can be mapped to another\nObservable through the ",Object(i.b)("inlineCode",{parentName:"p"},"streamSelector")," argument."),Object(i.b)("h2",{id:"see-also"},"See also"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"collect"}),Object(i.b)("inlineCode",{parentName:"a"},"collect(filter)"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"collectValues"}),Object(i.b)("inlineCode",{parentName:"a"},"collectValues()"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"../../tutorial/todos#creating-a-stream-for-each-todo"}),"Todo App Tutorial"))))}s.isMDXComponent=!0},83:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return O}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},b=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(r),d=n,O=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return r?a.a.createElement(O,l(l({ref:t},p),{},{components:r})):a.a.createElement(O,l({ref:t},p))}));function O(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);